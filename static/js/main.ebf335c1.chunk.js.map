{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","photos","setPhotos","initialValues","search","onSubmit","values","a","fetch","headers","response","json","data","results","name","className","map","photo","onClick","url","links","html","window","open","src","urls","regular","description","alt_description","join","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUA6CeA,MAvCf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,gCACE,iCACE,cAAC,IAAD,CACEC,cAAe,CAAEC,OAAQ,IACzBC,SAAQ,uCAAE,WAAMC,GAAN,iBAAAC,EAAA,sEAEeC,MAAM,4DAAD,OAA6DF,EAAOF,QAAU,CACxGK,QAAS,CACP,cAAiB,2DAJb,cAEFC,EAFE,gBAOWA,EAASC,OAPpB,OAOFC,EAPE,OAQRV,EAAUU,EAAKC,SARP,2CAAF,sDAFV,SAaE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,iBAKlB,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,SAAf,SACGd,EAAOe,KAAI,SAAAC,GAAK,OACf,0BAAyBC,QAAS,kBA1BjCC,EA0B4CF,EAAMG,MAAMC,KA1BjDC,OAAOC,KAAKJ,GAAnB,IAAAA,GA0BD,UACE,qBAAKK,IAAKP,EAAMQ,KAAKC,UACrB,4BAAI,CAACT,EAAMU,YAAaV,EAAMW,iBAAiBC,KAAK,UAFvCZ,EAAMa,eCtBpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ebf335c1.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport './header.css'\nimport './content.css'\nimport './article.css'\n\nfunction App() {\n  const [photos, setPhotos] = useState([])\n  const open = url => window.open(url)\n  return (\n    <div>\n      <header>\n        <Formik\n          initialValues={{ search: '' }}\n          onSubmit={async values => {\n            //es asincrona ya que voy a hacer una llamado a la API\n            const response = await fetch(`https://api.unsplash.com/search/photos?per_page=20&query=${values.search}`, {\n              headers: {\n                'Authorization': 'Client-ID rTprblb9x4sBg3no7PZ1BuudK6-kwDs7A1d3dnXzJM4'\n              }\n            })\n            const data = await response.json()\n            setPhotos(data.results)\n          }}\n        >\n          <Form>\n            <Field name=\"search\" />\n          </Form>\n\n        </Formik>\n      </header>\n      <div className=\"container\">\n          <div className=\"center\">\n            {photos.map(photo => \n              <article key ={photo.id} onClick={() => open(photo.links.html)}>\n                <img src={photo.urls.regular} />\n                <p>{[photo.description, photo.alt_description].join(' -')}</p>\n              </article>\n            )}\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}